generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum UserStatus {
  active
  inactive
  blocked
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  password       String?
  image          String?
  emailVerified  DateTime?
  role           Role      @default(USER)
  createdAt      DateTime  @default(now())
  status         UserStatus @default(active)

  accounts       Account[]
  sessions       Session[]
  orders         Order[]
  wishlistItems  WishlistItem[]  
  cartItems      CartItem[]     
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id          String     @id @default(cuid())
  name        String
  description String
  price       Int
  image       String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  categories  Category[] @relation("ProductCategories")
  orderItems  OrderItem[]
  cartItems   CartItem[]       
  wishlistItems WishlistItem[] 

  @@map("products")
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  products  Product[] @relation("ProductCategories")
}

model CartItem {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int      @default(1)

  @@unique([userId, productId])
}

model WishlistItem {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String

  @@unique([userId, productId])
}

model OrderItem {
  id         String   @id @default(cuid())
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    String
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  quantity   Int      @default(1)
}

model Order {
  id         String       @id @default(cuid())
  user       User         @relation(fields: [userId], references: [id])
  userId     String
  status     String       @default("new") 
  items      OrderItem[]
  createdAt  DateTime     @default(now())

  fullName   String?
  phone      String?
  address    String?
}



